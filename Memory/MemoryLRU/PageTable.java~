package osp.Memory;
/**
    The PageTable class represents the page table for a given task.
    A PageTable consists of an array of PageTableEntry objects.  This
    page table is of the non-inverted type.

    @OSPProject Memory
*/
import java.lang.Math;
import osp.Tasks.*;
import osp.Utilities.*;
import osp.IFLModules.*;
import osp.Hardware.*;

public class PageTable extends IflPageTable
{
   int size=0;
    /** 
  
	The page table constructor. Must call
	
	    super(ownerTask)

	as its first statement.

	@OSPProject Memory
    */
    public PageTable(TaskCB ownerTask)
    {
       
        super(ownerTask);
        size=(int) Math.pow(2,MMU.getPageAddressBits());
        pages=new PageTableEntry[size];  // your code goes here
        for(int i=0;i<size;i++)
        {
             pages[i]= new PageTableEntry(this,i);
        }
    }

    /**
       Frees up main memory occupied by the task.
       Then unreserves the freed pages, if necessary.

       @OSPProject Memory
    */
    public void do_deallocateMemory()
    {
       TaskCB task=super.getTask();
        for(int i=0;i<pages.length;i++)
        {
            if(pages[i].isValid())
             {
                pages[i].getFrame().setPage(null);
                pages[i].getFrame().setDirty(true);
                pages[i].getFrame().setReferenced(false);
             
                if(pages[i].getFrame().getReserved()==task)
                 {
                      pages[i].getFrame().setReserved(null);
                  }
              }
          }
                           
               // your code goes here

    }


    /*
       Feel free to add methods/fields to improve the readability of your code
    */

}

/*
      Feel free to add local classes to improve the readability of your code
*/
